{
    "author": "Lukas Reiter", 
    "plugins": [
        0, 
        6
    ], 
    "uuid": "15302930-aa43-4d7a-88c5-434bc4b9f763", 
    "version": "v1.0", 
    "script": "\"\"\"\nThis script searches in-scope HTTP requests and responses for information based on regular expressions\nthat are stored in dictionary session[\"relist\"] and if found, adds the identified value to the table above.\n\nNote that each regular expression must contain the named group \"value\" whose content will be extracted\nand added to the table.\n\"\"\"\nimport re\n# Do the initial setup\nif ref == 1 or \"relist\" not in session:\n\tsession[\"relist\"] = {\n\t\t\t\t\t\t\t\t\t\t\t\"guid\": re.compile(\"[^0-9a-zA-Z](?P<value>[0-9a-zA-Z]{8,8}(-[0-9a-zA-Z]{4,4}){3,3}-[0-9a-zA-Z]{12,12})[^0-9a-zA-Z]\"),\n\t\t\t\t\t\t\t\t\t\t\t#\"meta-tag\": re.compile(\"(?P<value><meta .*?>)\")\n\t\t\t\t\t\t\t\t\t\t\t}\n\theader = [\"Ref.\", \"Host\", \"Extracted From\", \"Category\", \"Value\"]\n\ndef parse_content(content, regexes):\n\t\"\"\"\n\tThis method implements the core functionality to extract information\n\tfrom requests or responses based on the given regular expressions.\n\t\"\"\"\n\trvalues = {}\n\tfor key, value in regexes.items():\n\t\tfor match in value.finditer(content):\n\t\t\tif key in rvalues:\n\t\t\t\trvalues[key].append(match.group(\"value\"))\n\t\t\telse:\n\t\t\t\trvalues[key] = [match.group(\"value\")]\n\treturn rvalues\n\n# Process only in-scope requests and responses\nif in_scope:\n\trequest = message_info.getRequest()\n\tresponse = message_info.getResponse()\n\trequest_string = helpers.bytesToString(request).encode(\"utf-8\")\n\tresponse_string = helpers.bytesToString(response).encode(\"utf-8\") if response else \"\"\n\trequest_list = parse_content(request_string, session[\"relist\"])\n\tresponse_list = parse_content(response_string, session[\"relist\"])\n\tfor key, values in request_list.items():\n\t\trows.extend([[ref, url.getHost(), \"Request\", key, item] for item in values if item != url.getHost()])\n\tfor key, values in response_list.items():\n\t\trows.extend([[ref, url.getHost(), \"Response\", key, item] for item in values if item != url.getHost()])", 
    "name": "Misc - Template Script to Extract Information From In-Scope Requests and Responses"
}