{
    "author": "Lukas Reiter", 
    "plugins": [
        0, 
        6
    ], 
    "uuid": "d9f5c0b0-1da9-4a82-b572-ad47e70f92b0", 
    "version": "v1.0", 
    "script": "\"\"\"\nThis script extracts all parameters from in-scope HTTP requests and adds them to the \ntable above for further analysis.\n\"\"\"\nimport traceback\n# Do the initial setup\nif ref == 1 or \"dedup\" not in session:\n\tsession[\"dedup\"] = {}\n\theader = [\"ref.\", \"url\", \"type\", \"parameter\", \"value\"]\n# Process only in-scope HTTP responses\nif in_scope:\n\trequest = message_info.getRequest()\n\trequest_info = helpers.analyzeRequest(request)\n\t#response_string = helpers.bytesToString(message_info.getResponse()).encode(\"utf-8\")\n\tfor param in request_info.getParameters():\n\t\ttype = get_parameter_name(param.getType())\n\t\tname = param.getName()\n\t\tvalue = param.getValue()\n\t\ttry:\n\t\t\tdedup = \"{}|{}|{}\".format(type, name, value.encode(\"utf-8\"))\n\t\t\tif dedup not in session[\"dedup\"]:\n\t\t\t\trows.append([ref, url, type, name, helpers.urlDecode(value)])\n\t\t\t\tsession[\"dedup\"][dedup] = True\n\t\texcept:\n\t\t\trows.append([ref, url, type, name, helpers.urlDecode(value)])\n\t\t\ttraceback.print_exc(file=callbacks.getStderr())", 
    "name": "Parameter - Template Script to Extract Parameter Names and Values from All In-Scope Requests"
}